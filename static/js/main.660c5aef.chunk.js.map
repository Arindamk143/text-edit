{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","role","type","sms","data-bs-dismiss","aria-label","Navbar","Fragment","concat","mode","href","title","id","aria-current","onClick","toggleMode","aria-checked","htmlFor","Textarea","_useState","useState","_useState2","Object","slicedToArray","text","setText","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","array","split","i","length","charAt","slice","join","navigator","clipboard","writeText","App","setMode","_useState3","_useState4","setAlert","showAlert","document","body","style","backgroundColor","Components_Textarea","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"wKAEe,SAASA,EAAMC,GAC1B,OACIA,EAAMC,OAASC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDAAkDC,KAAK,SACjFJ,EAAAC,EAAAC,cAAA,cAASJ,EAAMC,MAAMM,MADV,IAC0BP,EAAMC,MAAMO,IACjDN,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASF,UAAU,YAAYI,kBAAgB,QAAQC,aAAW,WCH5E,SAASC,EAAOX,GAC3B,OACIE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACAV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAQ,OAAoCb,EAAMc,KAA1C,QAAAD,OAAqDb,EAAMc,OACrEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeU,KAAK,KAAKf,EAAMgB,OAC5Cd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BY,GAAG,0BACzCf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBa,eAAa,OAAOH,KAAK,KAAxD,SAEJb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWU,KAAK,KAA7B,WAGRb,EAAAC,EAAAC,cAAA,OAAKC,UAAS,+BAAAQ,OAA8C,UAAbb,EAAMc,KAAgB,OAAO,UAC5EZ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBE,KAAK,WAAWY,QAASnB,EAAMoB,WAAYC,eAAa,QAAQf,KAAK,SAASW,GAAG,2BACrHf,EAAAC,EAAAC,cAAA,SAAOC,UAAW,mBAAmBiB,QAAQ,0BAA7C,0BCmCTC,MAtDf,SAAkBvB,GACd,IADqBwB,EA4BGC,mBAAS,IA5BZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA4BdK,EA5BcH,EAAA,GA4BRI,EA5BQJ,EAAA,GA6BrB,OACIxB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAQ,OAAiC,UAAbb,EAAMc,KAAe,OAAO,UAC1DZ,EAAAC,EAAAC,cAAA,SAAOkB,QAAQ,8BAA8BjB,UAAU,cAAcL,EAAMgB,OAC3Ed,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe0B,MAAOF,EAAMG,SARpC,SAASC,GAC7BH,EAAQG,EAAMC,OAAOH,QAOgEd,GAAG,8BAA8BkB,KAAK,OAEvHjC,EAAAC,EAAAC,cAAA,UAAQe,QAlCH,WACT,IAAIiB,EAAUP,EAAKQ,cACnBP,EAAQM,IAgCqB/B,UAAU,wBAAnC,cACAH,EAAAC,EAAAC,cAAA,UAAQe,QA/BA,WACZ,IAAIiB,EAAUP,EAAKS,cACnBR,EAAQM,IA6BwB/B,UAAU,wBAAtC,cACAH,EAAAC,EAAAC,cAAA,UAAQe,QA5BO,WAEnB,IADA,IAAIoB,EAAQV,EAAKW,MAAM,KACfC,EAAE,EAAGA,EAAEF,EAAMG,OAAQD,IACzBF,EAAME,GAAKF,EAAME,GAAGE,OAAO,GAAGN,cAAgBE,EAAME,GAAGG,MAAM,GAEjE,IAAIR,EAAUG,EAAMM,KAAK,KACzBf,EAAQM,IAsB+B/B,UAAU,wBAA7C,qBACAH,EAAAC,EAAAC,cAAA,UAAQe,QArBI,WAChB2B,UAAUC,UAAUC,UAAUnB,IAoBMxB,UAAU,wBAA1C,qBACAH,EAAAC,EAAAC,cAAA,UAAQe,QAlBA,WAEZW,EADe,KAiBiBzB,UAAU,wBAAtC,cAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,uBAAAQ,OAAsC,UAAbb,EAAMc,KAAe,OAAO,UAC/DZ,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAeyB,EAAKW,MAAM,KAAKE,OAA/B,cAAkDb,EAAKa,OAAvD,gBACHxC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+CAAuC,KAAQyB,EAAKa,OAApD,cAEPxC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,uBAAAQ,OAAsC,UAAbb,EAAMc,KAAe,OAAO,UAC/DZ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,0BACJF,EAAAC,EAAAC,cAAA,YAAAS,OAAOgB,EAAKa,OAAO,EAAEb,EAAK,wCCG3BoB,MAxCf,WAAe,IAAAzB,EACWC,mBAAS,SADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNV,EADMY,EAAA,GACAwB,EADAxB,EAAA,GAAAyB,EAaa1B,mBAAS,MAbtB2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAaNlD,EAbMmD,EAAA,GAaCC,EAbDD,EAAA,GAcPE,EAAY,SAAU/C,EAAMC,GAChC6C,EAAS,CACP9C,KAAMA,EACNC,IAAKA,KAGT,OACEN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAS,SAAA,KAEEV,EAAAC,EAAAC,cAACO,EAAD,CAAQK,MAAM,gBAAgBF,KAAMA,EAAMM,WArB3B,WACJ,UAATN,GACFoC,EAAQ,QACRK,SAASC,KAAKC,MAAMC,gBAAkB,UACtCJ,EAAU,eAAgB,0BAG1BJ,EAAQ,SACRK,SAASC,KAAKC,MAAMC,gBAAkB,YActCxD,EAAAC,EAAAC,cAACL,EAAD,CAAOE,MAAOA,IACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAMbH,EAAAC,EAAAC,cAACuD,EAAD,CAAU3C,MAAM,kBAAkBF,KAAMA,OChCjC8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWnB,SAASoB,eAAe,SACpDC,OACH1E,EAAAC,EAAAC,cAACF,EAAAC,EAAM0E,WAAP,KACE3E,EAAAC,EAAAC,cAAC0E,EAAD,QAOJlB","file":"static/js/main.660c5aef.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong> {props.alert.sms}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode===\"light\"? \"dark\":\"light\"}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} aria-checked=\"false\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className= \"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode Enable</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction Textarea(props) {\r\n    let Upcase = function(){\r\n        let newText = text.toUpperCase()\r\n        setText(newText);\r\n    }\r\n    let LowerCase = function(){\r\n        let newText = text.toLowerCase()\r\n        setText(newText);\r\n    }\r\n    let capitilizingCase = function(){\r\n        let array = text.split(\" \");\r\n        for(var i=0; i<array.length; i++){\r\n            array[i] = array[i].charAt(0).toUpperCase() + array[i].slice(1);\r\n        }\r\n        let newText = array.join(\" \");\r\n        setText(newText)\r\n    }\r\n    let copyClipboard = function(){\r\n        navigator.clipboard.writeText(text);\r\n        \r\n    }\r\n    let clearText = function(){\r\n        let newText = (\"\")\r\n        setText(newText)\r\n    }\r\n    let changetoUppercase = function(event){\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\")\r\n    return (\r\n        <>\r\n            <div className={`mb-3 mx-5 text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">{props.title}</label>\r\n                <textarea className=\"form-control\" value={text} onChange={changetoUppercase} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n            </div>\r\n            <button onClick={Upcase} className=\"btn btn-primary mx-5\">Upper Case</button>\r\n            <button onClick={LowerCase} className=\"btn btn-primary mx-5\">Lower Case</button>\r\n            <button onClick={capitilizingCase} className=\"btn btn-primary mx-5\">Capitilizing Case</button>\r\n            <button onClick={copyClipboard} className=\"btn btn-primary mx-5\">Copy To ClipBoard</button>\r\n            <button onClick={clearText} className=\"btn btn-primary mx-5\">Clear Text</button>\r\n\r\n            <div className={`container my-3 text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                <h2>Your Text Summary</h2>\r\n                <p><strong>Total {text.split(\" \").length} Words And {text.length} Charecters</strong></p>\r\n                <p><strong>Total Times Takes For Read Is {0.006 * text.length} Minutes</strong></p>\r\n            </div>\r\n            <div className={`container my-3 text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                <h4><strong>Preview</strong></h4>\r\n                <p>{`${text.length>0?text:\"Enter Your Text On The Text Area\"}`}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Textarea\r\n","import React, { } from 'react';\n// import About from './Components/About';\nimport { useState } from 'react';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport Textarea from './Components/Textarea';\n\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const toggleMode = function () {\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#080540\";\n      showAlert(\"Successfull!\", \"You Did It Congrats!\")\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n  const [alert, setAlert] = useState(null)\n  const showAlert = function (type, sms) {\n    setAlert({\n      type: type,\n      sms: sms\n    })\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"Text Editions\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\"> */}\n        {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <Textarea title=\"Enter Text Area\" mode={mode}/>\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}